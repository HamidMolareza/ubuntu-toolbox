#!/bin/bash

# Get the branch name from the command-line argument
branch_name="$1"

# Check if branch name is provided
if [[ -z "$branch_name" ]]; then
    echo "Usage: $(basename "$0") <branch_name>"
    exit 1
fi

# Check if the branch exists locally
branch_exists_locally=false
if git show-ref --quiet --verify "refs/heads/$branch_name"; then
    branch_exists_locally=true
fi

# Check if the branch exists on the remote
branch_exists_on_remote=false
if git ls-remote --quiet --heads origin "$branch_name" | grep -q "refs/heads/$branch_name"; then
    branch_exists_on_remote=true
fi

# Ask for confirmation to delete the local branch if it exists
if [[ "$branch_exists_locally" == true ]]; then
    read -p "Do you want to delete the local branch '$branch_name'? (y/n): " confirm_local
    if [[ "$confirm_local" == "y" ]]; then
        git branch -D "$branch_name"
        echo "Local branch '$branch_name' deleted."
    else
        echo "Local branch '$branch_name' was not deleted."
    fi
else
    echo "Branch '$branch_name' does not exist locally."
fi

# Ask for confirmation to delete the remote branch if it exists
if [[ "$branch_exists_on_remote" == true ]]; then
    read -p "Do you want to delete the remote branch '$branch_name'? (y/n): " confirm_remote
    if [[ "$confirm_remote" == "y" ]]; then
        git push origin --delete "$branch_name"
        echo "Remote branch '$branch_name' deleted."
    else
        echo "Remote branch '$branch_name' was not deleted."
    fi
else
    echo "Branch '$branch_name' does not exist on the remote."
fi
